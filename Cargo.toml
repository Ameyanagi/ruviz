[package]
name = "ruviz"
version = "0.1.0"
edition = "2024"
authors = ["Ruviz Contributors"]
description = "High-performance 2D plotting library for Rust"
license = "MIT OR Apache-2.0"
keywords = ["plotting", "visualization", "graphics", "charts"]
categories = ["visualization", "graphics"]
repository = "https://github.com/ruviz/ruviz"
readme = "README.md"

[dependencies]
# Core rendering
tiny-skia = "0.11"
tiny-skia-path = "0.11"

# Math & geometry  
glam = "0.25"
nalgebra = { version = "0.32", optional = true }

# Color management
palette = "0.7"

# Text rendering
fontdue = "0.8"  # Keep for fallback compatibility
cosmic-text = "0.13"  # Professional text layout and shaping
unicode-width = "0.1"

# Data structures (optional)
ndarray = { version = "0.15", optional = true }
polars = { version = "0.35", optional = true }

# Image I/O
image = { version = "0.24", default-features = false, features = ["png"] }

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Serialization (for themes/configs)
serde = { version = "1.0", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }

# Performance optimization
rayon = { version = "1.8", optional = true }
num_cpus = "1.16"

# GPU acceleration (optional)
wgpu = { version = "22.1", optional = true }
bytemuck = { version = "1.14", optional = true }
wgsl_bindgen = { version = "0.21", optional = true }
pollster = { version = "0.3", optional = true }
futures-intrusive = { version = "0.5", optional = true }

# Logging
log = "0.4"

# SIMD optimization
wide = { version = "0.7", optional = true }

# Window support (optional)
winit = { version = "0.29", optional = true }
raw-window-handle = { version = "0.6", optional = true }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
approx = "0.5"
tempfile = "3.8"
rand = "0.8"
tokio = { version = "1.0", features = ["full"] }
env_logger = "0.11"
regex = "1"
proptest = "1.4"

[features]
default = ["ndarray", "parallel"]
window = ["winit", "raw-window-handle"]
interactive = ["window", "gpu"]
serde = ["dep:serde", "serde_json", "palette/serde"]
ndarray_support = ["ndarray"]
polars_support = ["polars"]  
parallel = ["rayon"]
gpu = ["wgpu", "bytemuck", "wgsl_bindgen", "pollster", "futures-intrusive"]
simd = ["wide"]
svg = []
performance = ["parallel", "simd"]
full = ["ndarray_support", "polars_support", "nalgebra", "window", "serde", "performance", "gpu", "svg", "interactive"]

[profile.release]
lto = true
codegen-units = 1

[profile.bench]
debug = true

[[bin]]
name = "generate_gallery"
path = "scripts/generate_gallery.rs"

# Gallery Examples
[[example]]
name = "basic_example"
path = "gallery/basic/basic_example.rs"

[[example]]
name = "simple_visual_test"
path = "gallery/basic/simple_visual_test.rs"

[[example]]
name = "axis_legend_test"
path = "gallery/basic/axis_legend_test.rs"

[[example]]
name = "font_demo"
path = "gallery/advanced/font_demo.rs"

[[example]]
name = "simple_publication_test"
path = "gallery/publication/simple_publication_test.rs"

[[example]]
name = "scientific_plotting"
path = "gallery/scientific/scientific_plotting.rs"

[[example]]
name = "subplot_example"
path = "examples/subplot_example.rs"

# Benchmarks
[[bench]]
name = "memory_pool_benchmarks"
harness = false


[[bench]]
name = "simple_memory_benchmark"
harness = false

[[bench]]
name = "baseline_benchmarks"
harness = false

[[bench]]
name = "memory_benchmarks"
harness = false
